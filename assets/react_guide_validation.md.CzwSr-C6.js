import{_ as l,C as p,c as o,o as t,ae as a,G as e}from"./chunks/framework.Cz6IeHyN.js";const m=JSON.parse('{"title":"Validation","description":"","frontmatter":{},"headers":[],"relativePath":"react/guide/validation.md","filePath":"react/guide/validation.md"}'),r={name:"react/guide/validation.md"};function c(F,s,B,y,i,d){const n=p("ReactComponent");return t(),o("div",null,[s[0]||(s[0]=a(`<h1 id="validation" tabindex="-1">Validation <a class="header-anchor" href="#validation" aria-label="Permalink to &quot;Validation&quot;">​</a></h1><p><em>Formulier</em> supports field-level validation. This means you provide each form field that needs validation with an optional validator function. This makes it easy to validate when the form has conditional fields or requires dynamic validation rules depending on other fields for example.</p><h2 id="example-min-length" tabindex="-1">Example: Min Length <a class="header-anchor" href="#example-min-length" aria-label="Permalink to &quot;Example: Min Length&quot;">​</a></h2><p>Let&#39;s validate that the <code>firstName</code> and <code>lastName</code> are at least 2 characters long.<br> We start with the form we made on the <a href="./getting-started.html">Getting Started</a> page.</p><div class="language-jsx"><button title="Copy Code" class="copy"></button><span class="lang">jsx</span><pre class="shiki min-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#79B8FF;"> *</span><span style="color:#F97583;"> as</span><span style="color:#B392F0;"> React </span><span style="color:#F97583;">from</span><span style="color:#FFAB70;"> &#39;react&#39;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#B392F0;"> {FormProvider</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> useCreateForm</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> useFormField</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> useFormInstance</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> useSubmitHandler} </span><span style="color:#F97583;">from</span><span style="color:#FFAB70;"> &#39;@formulier/react&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">export</span><span style="color:#F97583;"> default</span><span style="color:#F97583;"> function</span><span style="color:#B392F0;"> Example() {</span></span>
<span class="line"><span style="color:#F97583;">	const</span><span style="color:#79B8FF;"> form</span><span style="color:#F97583;"> =</span><span style="color:#B392F0;"> useCreateForm({</span></span>
<span class="line"><span style="color:#B392F0;">		initialValues</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> {</span></span>
<span class="line"><span style="color:#B392F0;">			firstName</span><span style="color:#F97583;">:</span><span style="color:#FFAB70;"> &#39;&#39;</span><span style="color:#BBBBBB;">,</span></span>
<span class="line"><span style="color:#B392F0;">			lastName</span><span style="color:#F97583;">:</span><span style="color:#FFAB70;"> &#39;&#39;</span><span style="color:#BBBBBB;">,</span></span>
<span class="line"><span style="color:#B392F0;">			email</span><span style="color:#F97583;">:</span><span style="color:#FFAB70;"> &#39;&#39;</span><span style="color:#BBBBBB;">,</span></span>
<span class="line"><span style="color:#B392F0;">		}</span><span style="color:#BBBBBB;">,</span></span>
<span class="line"><span style="color:#B392F0;">	})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">	const</span><span style="color:#79B8FF;"> onSubmit</span><span style="color:#F97583;"> =</span><span style="color:#B392F0;"> useSubmitHandler(form</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> values </span><span style="color:#F97583;">=&gt;</span><span style="color:#B392F0;"> {</span></span>
<span class="line"><span style="color:#B392F0;">		alert(</span><span style="color:#79B8FF;">JSON</span><span style="color:#B392F0;">.stringify(values</span><span style="color:#BBBBBB;">,</span><span style="color:#79B8FF;"> null</span><span style="color:#BBBBBB;">,</span><span style="color:#F8F8F8;"> 2</span><span style="color:#B392F0;">))</span></span>
<span class="line"><span style="color:#B392F0;">	})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">	return</span><span style="color:#B392F0;"> (</span></span>
<span class="line"><span style="color:#B392F0;">		&lt;</span><span style="color:#FFAB70;">form</span><span style="color:#B392F0;"> onSubmit</span><span style="color:#F97583;">=</span><span style="color:#B392F0;">{onSubmit}&gt;</span></span>
<span class="line"><span style="color:#B392F0;">			&lt;</span><span style="color:#79B8FF;">FormProvider</span><span style="color:#B392F0;"> form</span><span style="color:#F97583;">=</span><span style="color:#B392F0;">{form}&gt;</span></span>
<span class="line highlighted"><span style="color:#B392F0;">				&lt;</span><span style="color:#79B8FF;">InputField</span><span style="color:#B392F0;"> name</span><span style="color:#F97583;">=</span><span style="color:#FFAB70;">&quot;firstName&quot;</span><span style="color:#B392F0;"> label</span><span style="color:#F97583;">=</span><span style="color:#FFAB70;">&quot;First name&quot;</span><span style="color:#B392F0;"> minLength</span><span style="color:#F97583;">=</span><span style="color:#B392F0;">{</span><span style="color:#F8F8F8;">2</span><span style="color:#B392F0;">} /&gt;</span></span>
<span class="line highlighted"><span style="color:#B392F0;">				&lt;</span><span style="color:#79B8FF;">InputField</span><span style="color:#B392F0;"> name</span><span style="color:#F97583;">=</span><span style="color:#FFAB70;">&quot;lastName&quot;</span><span style="color:#B392F0;"> label</span><span style="color:#F97583;">=</span><span style="color:#FFAB70;">&quot;Last name&quot;</span><span style="color:#B392F0;"> minLength</span><span style="color:#F97583;">=</span><span style="color:#B392F0;">{</span><span style="color:#F8F8F8;">2</span><span style="color:#B392F0;">} /&gt;</span></span>
<span class="line"><span style="color:#B392F0;">				&lt;</span><span style="color:#79B8FF;">InputField</span><span style="color:#B392F0;"> name</span><span style="color:#F97583;">=</span><span style="color:#FFAB70;">&quot;email&quot;</span><span style="color:#B392F0;"> label</span><span style="color:#F97583;">=</span><span style="color:#FFAB70;">&quot;Email&quot;</span><span style="color:#B392F0;"> type</span><span style="color:#F97583;">=</span><span style="color:#FFAB70;">&quot;email&quot;</span><span style="color:#B392F0;"> /&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">				&lt;</span><span style="color:#FFAB70;">button</span><span style="color:#B392F0;"> type</span><span style="color:#F97583;">=</span><span style="color:#FFAB70;">&quot;submit&quot;</span><span style="color:#B392F0;">&gt;Submit&lt;/</span><span style="color:#FFAB70;">button</span><span style="color:#B392F0;">&gt;</span></span>
<span class="line"><span style="color:#B392F0;">			&lt;/</span><span style="color:#79B8FF;">FormProvider</span><span style="color:#B392F0;">&gt;</span></span>
<span class="line"><span style="color:#B392F0;">		&lt;/</span><span style="color:#FFAB70;">form</span><span style="color:#B392F0;">&gt;</span></span>
<span class="line"><span style="color:#B392F0;">	)</span></span>
<span class="line"><span style="color:#B392F0;">}</span></span>
<span class="line"></span>
<span class="line highlighted"><span style="color:#F97583;">function</span><span style="color:#B392F0;"> InputField({name</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> label</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> type </span><span style="color:#F97583;">=</span><span style="color:#FFAB70;"> &#39;text&#39;</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> minLength}) {</span></span>
<span class="line"><span style="color:#F97583;">	const</span><span style="color:#79B8FF;"> form</span><span style="color:#F97583;"> =</span><span style="color:#B392F0;"> useFormInstance()</span></span>
<span class="line highlighted"><wbr></span>
<span class="line highlighted"><span style="color:#F97583;">	const</span><span style="color:#79B8FF;"> validate</span><span style="color:#F97583;"> =</span><span style="color:#79B8FF;"> React</span><span style="color:#B392F0;">.useCallback(</span></span>
<span class="line highlighted"><span style="color:#B392F0;">		value </span><span style="color:#F97583;">=&gt;</span><span style="color:#B392F0;"> {</span></span>
<span class="line highlighted"><span style="color:#F97583;">			if</span><span style="color:#B392F0;"> (minLength </span><span style="color:#F97583;">!==</span><span style="color:#79B8FF;"> undefined</span><span style="color:#B392F0;">) {</span></span>
<span class="line highlighted"><span style="color:#F97583;">				if</span><span style="color:#B392F0;"> (</span><span style="color:#F97583;">typeof</span><span style="color:#B392F0;"> value </span><span style="color:#F97583;">===</span><span style="color:#FFAB70;"> &#39;string&#39;</span><span style="color:#F97583;"> &amp;&amp;</span><span style="color:#79B8FF;"> value</span><span style="color:#B392F0;">.</span><span style="color:#79B8FF;">length</span><span style="color:#F97583;"> &lt;</span><span style="color:#B392F0;"> minLength) {</span></span>
<span class="line highlighted"><span style="color:#F97583;">					return</span><span style="color:#FFAB70;"> \`Value should be at least </span><span style="color:#F97583;">\${</span><span style="color:#B392F0;">minLength</span><span style="color:#F97583;">}</span><span style="color:#FFAB70;"> characters long!\`</span></span>
<span class="line highlighted"><span style="color:#B392F0;">				}</span></span>
<span class="line highlighted"><span style="color:#B392F0;">			}</span></span>
<span class="line highlighted"><span style="color:#F97583;">			return</span><span style="color:#79B8FF;"> null</span></span>
<span class="line highlighted"><span style="color:#B392F0;">		}</span><span style="color:#BBBBBB;">,</span></span>
<span class="line highlighted"><span style="color:#B392F0;">		[minLength]</span><span style="color:#BBBBBB;">,</span></span>
<span class="line highlighted"><span style="color:#B392F0;">	)</span></span>
<span class="line"></span>
<span class="line highlighted"><span style="color:#F97583;">	const</span><span style="color:#B392F0;"> [</span><span style="color:#79B8FF;">field</span><span style="color:#BBBBBB;">,</span><span style="color:#79B8FF;"> meta</span><span style="color:#B392F0;">] </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> useFormField(form</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> {name</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> validate})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">	return</span><span style="color:#B392F0;"> (</span></span>
<span class="line"><span style="color:#B392F0;">		&lt;</span><span style="color:#FFAB70;">div</span><span style="color:#B392F0;"> className</span><span style="color:#F97583;">=</span><span style="color:#FFAB70;">&quot;field&quot;</span><span style="color:#B392F0;">&gt;</span></span>
<span class="line"><span style="color:#B392F0;">			&lt;</span><span style="color:#FFAB70;">label</span><span style="color:#B392F0;"> className</span><span style="color:#F97583;">=</span><span style="color:#FFAB70;">&quot;label&quot;</span><span style="color:#B392F0;"> htmlFor</span><span style="color:#F97583;">=</span><span style="color:#B392F0;">{name}&gt;</span></span>
<span class="line"><span style="color:#B392F0;">				{label}</span></span>
<span class="line"><span style="color:#B392F0;">			&lt;/</span><span style="color:#FFAB70;">label</span><span style="color:#B392F0;">&gt;</span></span>
<span class="line"><span style="color:#B392F0;">			&lt;</span><span style="color:#FFAB70;">input</span></span>
<span class="line"><span style="color:#B392F0;">				{</span><span style="color:#F97583;">...</span><span style="color:#B392F0;">field}</span></span>
<span class="line"><span style="color:#B392F0;">				className</span><span style="color:#F97583;">=</span><span style="color:#FFAB70;">&quot;input&quot;</span></span>
<span class="line"><span style="color:#B392F0;">				type</span><span style="color:#F97583;">=</span><span style="color:#B392F0;">{type}</span></span>
<span class="line"><span style="color:#B392F0;">				name</span><span style="color:#F97583;">=</span><span style="color:#B392F0;">{name}</span></span>
<span class="line"><span style="color:#B392F0;">				value</span><span style="color:#F97583;">=</span><span style="color:#B392F0;">{</span><span style="color:#79B8FF;">field</span><span style="color:#B392F0;">.value </span><span style="color:#F97583;">||</span><span style="color:#FFAB70;"> &#39;&#39;</span><span style="color:#B392F0;">}</span></span>
<span class="line"><span style="color:#B392F0;">				onChange</span><span style="color:#F97583;">=</span><span style="color:#B392F0;">{event </span><span style="color:#F97583;">=&gt;</span><span style="color:#79B8FF;"> field</span><span style="color:#B392F0;">.onChange(</span><span style="color:#79B8FF;">event</span><span style="color:#B392F0;">.</span><span style="color:#79B8FF;">target</span><span style="color:#B392F0;">.value)}</span></span>
<span class="line"><span style="color:#B392F0;">			/&gt;</span></span>
<span class="line highlighted"><span style="color:#B392F0;">			{</span><span style="color:#79B8FF;">meta</span><span style="color:#B392F0;">.error </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#B392F0;"> &lt;</span><span style="color:#FFAB70;">span</span><span style="color:#B392F0;"> className</span><span style="color:#F97583;">=</span><span style="color:#FFAB70;">&quot;error&quot;</span><span style="color:#B392F0;">&gt;{</span><span style="color:#79B8FF;">meta</span><span style="color:#B392F0;">.error}&lt;/</span><span style="color:#FFAB70;">span</span><span style="color:#B392F0;">&gt;}</span></span>
<span class="line"><span style="color:#B392F0;">		&lt;/</span><span style="color:#FFAB70;">div</span><span style="color:#B392F0;">&gt;</span></span>
<span class="line"><span style="color:#B392F0;">	)</span></span>
<span class="line"><span style="color:#B392F0;">}</span></span></code></pre></div><h2 id="example-required" tabindex="-1">Example: Required <a class="header-anchor" href="#example-required" aria-label="Permalink to &quot;Example: Required&quot;">​</a></h2><p>Let&#39;s also make sure that all our fields are always filled out.<br> Continuing on where we left off:</p><div class="language-jsx"><button title="Copy Code" class="copy"></button><span class="lang">jsx</span><pre class="shiki min-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#79B8FF;"> *</span><span style="color:#F97583;"> as</span><span style="color:#B392F0;"> React </span><span style="color:#F97583;">from</span><span style="color:#FFAB70;"> &#39;react&#39;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#B392F0;"> {FormProvider</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> useCreateForm</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> useFormField</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> useFormInstance</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> useSubmitHandler} </span><span style="color:#F97583;">from</span><span style="color:#FFAB70;"> &#39;@formulier/react&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">export</span><span style="color:#F97583;"> default</span><span style="color:#F97583;"> function</span><span style="color:#B392F0;"> Example() {</span></span>
<span class="line"><span style="color:#F97583;">	const</span><span style="color:#79B8FF;"> form</span><span style="color:#F97583;"> =</span><span style="color:#B392F0;"> useCreateForm({</span></span>
<span class="line"><span style="color:#B392F0;">		initialValues</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> {</span></span>
<span class="line"><span style="color:#B392F0;">			firstName</span><span style="color:#F97583;">:</span><span style="color:#FFAB70;"> &#39;&#39;</span><span style="color:#BBBBBB;">,</span></span>
<span class="line"><span style="color:#B392F0;">			lastName</span><span style="color:#F97583;">:</span><span style="color:#FFAB70;"> &#39;&#39;</span><span style="color:#BBBBBB;">,</span></span>
<span class="line"><span style="color:#B392F0;">			email</span><span style="color:#F97583;">:</span><span style="color:#FFAB70;"> &#39;&#39;</span><span style="color:#BBBBBB;">,</span></span>
<span class="line"><span style="color:#B392F0;">		}</span><span style="color:#BBBBBB;">,</span></span>
<span class="line"><span style="color:#B392F0;">	})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">	const</span><span style="color:#79B8FF;"> onSubmit</span><span style="color:#F97583;"> =</span><span style="color:#B392F0;"> useSubmitHandler(form</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> values </span><span style="color:#F97583;">=&gt;</span><span style="color:#B392F0;"> {</span></span>
<span class="line"><span style="color:#B392F0;">		alert(</span><span style="color:#79B8FF;">JSON</span><span style="color:#B392F0;">.stringify(values</span><span style="color:#BBBBBB;">,</span><span style="color:#79B8FF;"> null</span><span style="color:#BBBBBB;">,</span><span style="color:#F8F8F8;"> 2</span><span style="color:#B392F0;">))</span></span>
<span class="line"><span style="color:#B392F0;">	})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">	return</span><span style="color:#B392F0;"> (</span></span>
<span class="line"><span style="color:#B392F0;">		&lt;</span><span style="color:#FFAB70;">form</span><span style="color:#B392F0;"> onSubmit</span><span style="color:#F97583;">=</span><span style="color:#B392F0;">{onSubmit}&gt;</span></span>
<span class="line"><span style="color:#B392F0;">			&lt;</span><span style="color:#79B8FF;">FormProvider</span><span style="color:#B392F0;"> form</span><span style="color:#F97583;">=</span><span style="color:#B392F0;">{form}&gt;</span></span>
<span class="line highlighted"><span style="color:#B392F0;">				&lt;</span><span style="color:#79B8FF;">InputField</span><span style="color:#B392F0;"> name</span><span style="color:#F97583;">=</span><span style="color:#FFAB70;">&quot;firstName&quot;</span><span style="color:#B392F0;"> label</span><span style="color:#F97583;">=</span><span style="color:#FFAB70;">&quot;First name&quot;</span><span style="color:#B392F0;"> minLength</span><span style="color:#F97583;">=</span><span style="color:#B392F0;">{</span><span style="color:#F8F8F8;">2</span><span style="color:#B392F0;">} required /&gt;</span></span>
<span class="line highlighted"><span style="color:#B392F0;">				&lt;</span><span style="color:#79B8FF;">InputField</span><span style="color:#B392F0;"> name</span><span style="color:#F97583;">=</span><span style="color:#FFAB70;">&quot;lastName&quot;</span><span style="color:#B392F0;"> label</span><span style="color:#F97583;">=</span><span style="color:#FFAB70;">&quot;Last name&quot;</span><span style="color:#B392F0;"> minLength</span><span style="color:#F97583;">=</span><span style="color:#B392F0;">{</span><span style="color:#F8F8F8;">2</span><span style="color:#B392F0;">} required /&gt;</span></span>
<span class="line highlighted"><span style="color:#B392F0;">				&lt;</span><span style="color:#79B8FF;">InputField</span><span style="color:#B392F0;"> name</span><span style="color:#F97583;">=</span><span style="color:#FFAB70;">&quot;email&quot;</span><span style="color:#B392F0;"> label</span><span style="color:#F97583;">=</span><span style="color:#FFAB70;">&quot;Email&quot;</span><span style="color:#B392F0;"> type</span><span style="color:#F97583;">=</span><span style="color:#FFAB70;">&quot;email&quot;</span><span style="color:#B392F0;"> required /&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">				&lt;</span><span style="color:#FFAB70;">button</span><span style="color:#B392F0;"> type</span><span style="color:#F97583;">=</span><span style="color:#FFAB70;">&quot;submit&quot;</span><span style="color:#B392F0;">&gt;Submit&lt;/</span><span style="color:#FFAB70;">button</span><span style="color:#B392F0;">&gt;</span></span>
<span class="line"><span style="color:#B392F0;">			&lt;/</span><span style="color:#79B8FF;">FormProvider</span><span style="color:#B392F0;">&gt;</span></span>
<span class="line"><span style="color:#B392F0;">		&lt;/</span><span style="color:#FFAB70;">form</span><span style="color:#B392F0;">&gt;</span></span>
<span class="line"><span style="color:#B392F0;">	)</span></span>
<span class="line"><span style="color:#B392F0;">}</span></span>
<span class="line"></span>
<span class="line highlighted"><span style="color:#F97583;">function</span><span style="color:#B392F0;"> InputField({name</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> label</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> type </span><span style="color:#F97583;">=</span><span style="color:#FFAB70;"> &#39;text&#39;</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> minLength</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> required}) {</span></span>
<span class="line"><span style="color:#F97583;">	const</span><span style="color:#79B8FF;"> form</span><span style="color:#F97583;"> =</span><span style="color:#B392F0;"> useFormInstance()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">	const</span><span style="color:#79B8FF;"> validate</span><span style="color:#F97583;"> =</span><span style="color:#79B8FF;"> React</span><span style="color:#B392F0;">.useCallback(</span></span>
<span class="line"><span style="color:#B392F0;">		value </span><span style="color:#F97583;">=&gt;</span><span style="color:#B392F0;"> {</span></span>
<span class="line highlighted"><span style="color:#F97583;">			if</span><span style="color:#B392F0;"> (required) {</span></span>
<span class="line highlighted"><span style="color:#F97583;">				if</span><span style="color:#B392F0;"> (value </span><span style="color:#F97583;">===</span><span style="color:#FFAB70;"> &#39;&#39;</span><span style="color:#B392F0;">) {</span></span>
<span class="line highlighted"><span style="color:#F97583;">					return</span><span style="color:#FFAB70;"> &#39;Value is required!&#39;</span></span>
<span class="line highlighted"><span style="color:#B392F0;">				}</span></span>
<span class="line highlighted"><span style="color:#B392F0;">			}</span></span>
<span class="line"><span style="color:#F97583;">			if</span><span style="color:#B392F0;"> (minLength </span><span style="color:#F97583;">!==</span><span style="color:#79B8FF;"> undefined</span><span style="color:#B392F0;">) {</span></span>
<span class="line"><span style="color:#F97583;">				if</span><span style="color:#B392F0;"> (</span><span style="color:#F97583;">typeof</span><span style="color:#B392F0;"> value </span><span style="color:#F97583;">===</span><span style="color:#FFAB70;"> &#39;string&#39;</span><span style="color:#F97583;"> &amp;&amp;</span><span style="color:#79B8FF;"> value</span><span style="color:#B392F0;">.</span><span style="color:#79B8FF;">length</span><span style="color:#F97583;"> &lt;</span><span style="color:#B392F0;"> minLength) {</span></span>
<span class="line"><span style="color:#F97583;">					return</span><span style="color:#FFAB70;"> \`Value should be at least </span><span style="color:#F97583;">\${</span><span style="color:#B392F0;">minLength</span><span style="color:#F97583;">}</span><span style="color:#FFAB70;"> characters long!\`</span></span>
<span class="line"><span style="color:#B392F0;">				}</span></span>
<span class="line"><span style="color:#B392F0;">			}</span></span>
<span class="line"><span style="color:#F97583;">			return</span><span style="color:#79B8FF;"> null</span></span>
<span class="line"><span style="color:#B392F0;">		}</span><span style="color:#BBBBBB;">,</span></span>
<span class="line highlighted"><span style="color:#B392F0;">		[required</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> minLength]</span><span style="color:#BBBBBB;">,</span></span>
<span class="line"><span style="color:#B392F0;">	)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">	const</span><span style="color:#B392F0;"> [</span><span style="color:#79B8FF;">field</span><span style="color:#BBBBBB;">,</span><span style="color:#79B8FF;"> meta</span><span style="color:#B392F0;">] </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> useFormField(form</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> {name</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> validate})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">	return</span><span style="color:#B392F0;"> (</span></span>
<span class="line"><span style="color:#B392F0;">		&lt;</span><span style="color:#FFAB70;">div</span><span style="color:#B392F0;"> className</span><span style="color:#F97583;">=</span><span style="color:#FFAB70;">&quot;field&quot;</span><span style="color:#B392F0;">&gt;</span></span>
<span class="line"><span style="color:#B392F0;">			&lt;</span><span style="color:#FFAB70;">label</span><span style="color:#B392F0;"> className</span><span style="color:#F97583;">=</span><span style="color:#FFAB70;">&quot;label&quot;</span><span style="color:#B392F0;"> htmlFor</span><span style="color:#F97583;">=</span><span style="color:#B392F0;">{name}&gt;</span></span>
<span class="line"><span style="color:#B392F0;">				{label}</span></span>
<span class="line"><span style="color:#B392F0;">			&lt;/</span><span style="color:#FFAB70;">label</span><span style="color:#B392F0;">&gt;</span></span>
<span class="line"><span style="color:#B392F0;">			&lt;</span><span style="color:#FFAB70;">input</span></span>
<span class="line"><span style="color:#B392F0;">				{</span><span style="color:#F97583;">...</span><span style="color:#B392F0;">field}</span></span>
<span class="line"><span style="color:#B392F0;">				className</span><span style="color:#F97583;">=</span><span style="color:#FFAB70;">&quot;input&quot;</span></span>
<span class="line"><span style="color:#B392F0;">				type</span><span style="color:#F97583;">=</span><span style="color:#B392F0;">{type}</span></span>
<span class="line"><span style="color:#B392F0;">				name</span><span style="color:#F97583;">=</span><span style="color:#B392F0;">{name}</span></span>
<span class="line"><span style="color:#B392F0;">				value</span><span style="color:#F97583;">=</span><span style="color:#B392F0;">{</span><span style="color:#79B8FF;">field</span><span style="color:#B392F0;">.value </span><span style="color:#F97583;">||</span><span style="color:#FFAB70;"> &#39;&#39;</span><span style="color:#B392F0;">}</span></span>
<span class="line"><span style="color:#B392F0;">				onChange</span><span style="color:#F97583;">=</span><span style="color:#B392F0;">{event </span><span style="color:#F97583;">=&gt;</span><span style="color:#79B8FF;"> field</span><span style="color:#B392F0;">.onChange(</span><span style="color:#79B8FF;">event</span><span style="color:#B392F0;">.</span><span style="color:#79B8FF;">target</span><span style="color:#B392F0;">.value)}</span></span>
<span class="line"><span style="color:#B392F0;">			/&gt;</span></span>
<span class="line"><span style="color:#B392F0;">			{</span><span style="color:#79B8FF;">meta</span><span style="color:#B392F0;">.error </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#B392F0;"> &lt;</span><span style="color:#FFAB70;">span</span><span style="color:#B392F0;"> className</span><span style="color:#F97583;">=</span><span style="color:#FFAB70;">&quot;error&quot;</span><span style="color:#B392F0;">&gt;{</span><span style="color:#79B8FF;">meta</span><span style="color:#B392F0;">.error}&lt;/</span><span style="color:#FFAB70;">span</span><span style="color:#B392F0;">&gt;}</span></span>
<span class="line"><span style="color:#B392F0;">		&lt;/</span><span style="color:#FFAB70;">div</span><span style="color:#B392F0;">&gt;</span></span>
<span class="line"><span style="color:#B392F0;">	)</span></span>
<span class="line"><span style="color:#B392F0;">}</span></span></code></pre></div><h2 id="example-results" tabindex="-1">Example: Results <a class="header-anchor" href="#example-results" aria-label="Permalink to &quot;Example: Results&quot;">​</a></h2><p>Below you can see the result of our changes.</p>`,10)),e(n,{title:"",name:"react-components/guide-validation-required.jsx"}),s[1]||(s[1]=a('<h2 id="validation-timing" tabindex="-1">Validation Timing <a class="header-anchor" href="#validation-timing" aria-label="Permalink to &quot;Validation Timing&quot;">​</a></h2><p><code>validation</code> functions are called:</p><ul><li>When the user tries to submit the form</li><li>When the field loses focus (Meaning the user &quot;touched&quot; the field)</li><li>When the field is touched and the value changes (E.g. the user types a character in the input)</li></ul><h3 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">​</a></h3><p>Imagine the user focuses the <code>firstName</code> field and tabs to the <code>lastName</code> field. The <code>firstName</code> field will now show the <code>&quot;Value is required!&quot;</code> error. If the user then goes back to <code>firstName</code> and types one character, the validation function is run again and now the error will be <code>&quot;Value should be at least 2 characters long!&quot;</code>. Adding 2 more characters will make the error disappear.</p><h2 id="validation-order" tabindex="-1">Validation Order <a class="header-anchor" href="#validation-order" aria-label="Permalink to &quot;Validation Order&quot;">​</a></h2><p>It&#39;s important to note that a field can only have one error at a time. Therefore whichever error string is returned by our <code>validate</code> function is the one that&#39;s available from <code>meta.error</code>.</p><p>In our example above it makes sense to validate <code>required</code> <em>before</em> <code>minLength</code> so if we leave the field empty, we will see the required error instead of the min length one.</p>',8))])}const h=l(r,[["render",c]]);export{m as __pageData,h as default};
